---
swagger: "2.0"
info:
  description: "Calorify API"
  version: "1.0.0"
  title: "Calorify API"
  contact:
    email: "saipanindra9@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "virtserver.swaggerhub.com"
basePath: "/Calorify/CalorifyAPI/1.0.0"
tags:
- name: "admins"
  description: "Secured Admin-only calls"
- name: "developers"
  description: "Operations available to regular developers"
schemes:
- "https"
paths:
  /Cuisines:
    get:
      tags:
      - "developers"
      summary: "get list of cuisines"
      description: "get list of cuisines in the system."
      operationId: "getCuisines"
      produces:
      - "application/json"
      parameters:
      - name: "type"
        in: "query"
        description: "pass an optional cuisine type for looking up cuisines"
        required: false
        type: "string"
      - name: "skip"
        in: "query"
        description: "number of records to skip for pagination"
        required: false
        type: "integer"
        minimum: 0
        format: "int32"
      - name: "limit"
        in: "query"
        description: "maximum number of records to return"
        required: false
        type: "integer"
        maximum: 50
        minimum: 0
        format: "int32"
      responses:
        200:
          description: "search results matching criteria"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Cuisines"
        400:
          description: "bad input parameter"
      x-swagger-router-controller: "Developers"
    post:
      tags:
      - "admins"
      summary: "adds cuisine to the system"
      description: "Adds a new cuisine to the system"
      operationId: "addCuisine"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "Cuisine"
        description: "Cuisine object to add"
        required: false
        schema:
          $ref: "#/definitions/Cuisines"
      responses:
        201:
          description: "success response , cuisine added to the system"
        400:
          description: "invalid input, object invalid"
        409:
          description: "an existing item already exists"
      x-swagger-router-controller: "Admins"
  /users:
    get:
      tags:
      - "developers"
      summary: "get list of users"
      description: "get list of users in the system."
      operationId: "getUsers"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "query"
        description: "pass an optional user name(first name or last name) string for\
          \ looking up users"
        required: false
        type: "string"
      - name: "skip"
        in: "query"
        description: "number of records to skip for pagination"
        required: false
        type: "integer"
        minimum: 0
        format: "int32"
      - name: "limit"
        in: "query"
        description: "maximum number of records to return"
        required: false
        type: "integer"
        maximum: 50
        minimum: 0
        format: "int32"
      responses:
        200:
          description: "search results matching criteria"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Users"
        400:
          description: "bad input parameter"
      x-swagger-router-controller: "Developers"
    post:
      tags:
      - "admins"
      summary: "adds user to the system and create user account"
      description: "Adds an user to the system"
      operationId: "addUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "User"
        description: "User object to add"
        required: false
        schema:
          $ref: "#/definitions/Users"
      responses:
        201:
          description: "success response , user added to the system"
        400:
          description: "invalid input, object invalid"
        409:
          description: "an existing item already exists"
      x-swagger-router-controller: "Admins"
  /Ingredients:
    get:
      tags:
      - "developers"
      summary: "gets List of Ingredients"
      description: "By passing in the appropriate options, you can search for\navailable\
        \ ingredients in the system\n"
      operationId: "searchInventory"
      produces:
      - "application/json"
      parameters:
      - name: "searchString"
        in: "query"
        description: "pass an optional search string for looking up ingredients"
        required: false
        type: "string"
      - name: "skip"
        in: "query"
        description: "number of records to skip for pagination"
        required: false
        type: "integer"
        minimum: 0
        format: "int32"
      - name: "limit"
        in: "query"
        description: "maximum number of records to return"
        required: false
        type: "integer"
        maximum: 50
        minimum: 0
        format: "int32"
      responses:
        200:
          description: "search results matching criteria"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Ingredients"
        400:
          description: "bad input parameter"
      x-swagger-router-controller: "Developers"
    post:
      tags:
      - "admins"
      summary: "adds an ingredient"
      description: "Adds an ingredient to the system"
      operationId: "addIngredient"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "Ingredient"
        description: "Inventory item to add"
        required: false
        schema:
          $ref: "#/definitions/Ingredients"
      responses:
        201:
          description: "item created"
        400:
          description: "invalid input, object invalid"
        409:
          description: "an existing item already exists"
      x-swagger-router-controller: "Admins"
definitions:
  Ingredients:
    type: "object"
    required:
    - "AvailableQuantity"
    - "CategoryId"
    - "Color"
    - "IngredientId"
    - "Name"
    - "NutritionId"
    properties:
      IngredientId:
        type: "string"
        format: "uuid"
        example: "d290f1ee-6c54-4b01-90e6-d701748f0851"
      Name:
        type: "string"
        example: "Salt"
      Color:
        type: "string"
        example: "White"
      AvailableQuantity:
        type: "integer"
        example: 30
      Unit:
        type: "string"
        example: "grams"
      CategoryId:
        type: "string"
        format: "uuid"
        example: "ed90f1ee-6c54-4b01-90e6-d701748f0851"
      NutritionId:
        type: "string"
        format: "uuid"
        example: "xd90f1eed-6c54-4b01-90e6-d701748f0851"
  Users:
    type: "object"
    required:
    - "DateOfBirth"
    - "FirstName"
    - "Id"
    - "LastName"
    - "Sex"
    properties:
      Id:
        type: "string"
        format: "uuid"
        example: "d290f1ee-6c54-4b01-90e6-d701748f0851"
      Sex:
        type: "string"
        example: "Male"
      DateOfBirth:
        type: "string"
        format: "date"
        example: "1st Jan 2017"
      FirstName:
        type: "string"
        example: "Christopher"
      LastName:
        type: "string"
        example: "Nolan"
  Cuisines:
    type: "object"
    required:
    - "Id"
    - "Name"
    properties:
      Id:
        type: "string"
        format: "uuid"
        example: "d290f1ee-6c54-4b01-90e6-d701748f0851"
      Name:
        type: "string"
        example: "Asian"
